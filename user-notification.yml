version: '3.8'

services:
  # Shared Redis service
  shared-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - shared_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # User Management Database
  user-management-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_management
    ports:
      - "5433:5432"  # Changed port to avoid conflicts
    volumes:
      - user_management_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d user_management"]
      interval: 5s
      timeout: 5s
      retries: 5

  # User Management Service
  user-management:
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://shared-redis:6379/0
      - NOTIFICATION_SERVICE_URL=notification:50051
    depends_on:
      shared-redis:
        condition: service_healthy
      user-management-db:
        condition: service_healthy
      notification:
        condition: service_started
    volumes:
      - ./services/user-management:/usr/src/app
    command: >
      bash -c "pip install -r requirements.txt &&
              pip install celery psycopg2-binary boto3 python-jose[cryptography] &&
              python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. app/protos/notification.proto &&
              uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  # Notification Service
  notification:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
      - "50051:50051"
    environment:
      - REDIS_URL=redis://shared-redis:6379/0
      - LOG_LEVEL=INFO
    depends_on:
      shared-redis:
        condition: service_healthy
    volumes:
      - ./services/notification-service:/app
    command: >
      bash -c "pip install --no-cache-dir -r requirements.txt &&
              pip install --no-cache-dir -r requirements-dev.txt &&
              python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. app/protos/notification.proto &&
              uvicorn app.main:app --host 0.0.0.0 --port 8004 --reload"

volumes:
  shared_redis_data:
  user_management_db_data: