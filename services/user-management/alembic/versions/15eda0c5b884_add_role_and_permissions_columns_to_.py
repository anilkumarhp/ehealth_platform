"""Add role and permissions columns to users table

Revision ID: 15eda0c5b884
Revises: 417eacdf0b84
Create Date: 2025-07-20 20:05:13.752691

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '15eda0c5b884'
down_revision: Union[str, Sequence[str], None] = '417eacdf0b84'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coupons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('current_uses', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coupons_code'), 'coupons', ['code'], unique=True)
    op.create_table('revoked_refresh_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('token_jti', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_revoked_refresh_tokens_token_jti'), 'revoked_refresh_tokens', ['token_jti'], unique=True)
    op.create_table('subscription_plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price_monthly', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('price_yearly', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('features', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('plan_coupon_association',
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('coupon_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupons.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ),
    sa.PrimaryKeyConstraint('plan_id', 'coupon_id')
    )
    op.add_column('organizations', sa.Column('payment_gateway_order_id', sa.String(), nullable=True))
    op.create_index(op.f('ix_organizations_payment_gateway_order_id'), 'organizations', ['payment_gateway_order_id'], unique=False)
    op.add_column('users', sa.Column('role', sa.String(length=50), nullable=False))
    op.add_column('users', sa.Column('permissions', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('users', sa.Column('password_reset_token', sa.String(), nullable=True))
    op.add_column('users', sa.Column('password_reset_expires_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint(None, 'users', ['password_reset_token'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'password_reset_expires_at')
    op.drop_column('users', 'password_reset_token')
    op.drop_column('users', 'permissions')
    op.drop_column('users', 'role')
    op.drop_index(op.f('ix_organizations_payment_gateway_order_id'), table_name='organizations')
    op.drop_column('organizations', 'payment_gateway_order_id')
    op.drop_table('plan_coupon_association')
    op.drop_table('subscription_plans')
    op.drop_index(op.f('ix_revoked_refresh_tokens_token_jti'), table_name='revoked_refresh_tokens')
    op.drop_table('revoked_refresh_tokens')
    op.drop_index(op.f('ix_coupons_code'), table_name='coupons')
    op.drop_table('coupons')
    # ### end Alembic commands ###
