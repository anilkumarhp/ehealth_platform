services:
  # Our User Management FastAPI Service
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      # THIS IS THE CORRECT LOCATION FOR THIS LINE
      # It mounts the entire project directory into the api container.
      - ./:/usr/src/app
    env_file:
      - .env
    environment:
      - NOTIFICATION_SERVICE_URL=notification:50051
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      notification:
        condition: service_started

  celery_worker:
    build: .
    # The command is different: it starts celery, not uvicorn
    command: celery -A app.core.celery_app.celery_app worker -l info
    volumes:
      - ./:/usr/src/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    volumes:
      # The db service ONLY needs the volume for persisting database data.
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    ports:
      - "6382:6379"  # Changed port to avoid conflicts
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Notification Service
  notification:
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
      - "50051:50051"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data: