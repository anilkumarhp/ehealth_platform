[tool.poetry]
name = "lab-management"
version = "0.1.0"
description = "A microservice for managing lab reports, appointments, payments, and data consent."
authors = ["Lead Architect <architect@example.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
pydantic = {extras = ["email"], version = "^2.7.4"}
pydantic-settings = "^2.3.4"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.31"}
asyncpg = "^0.29.0" # High-performance async driver for PostgreSQL
alembic = "^1.13.1" # For database migrations
python-jose = {extras = ["cryptography"], version = "^3.3.0"} # For JWT handling
pyjwt = "^2.8.0" # Alternative JWT library
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
celery = "^5.4.0"
redis = "^5.0.7" # Broker for Celery
boto3 = "^1.34.131" # AWS SDK for S3 integration
psutil = "^5.9.5" # System monitoring
stripe = "^10.1.0" # Stripe payment gateway SDK
python-multipart = "^0.0.9" # For file uploads in FastAPI
starlette-prometheus = "^0.10.0"
python-json-logger = "^2.0.7"
python-dotenv = "^1.0.1"
grpcio = "^1.64.1"
protobuf = "^5.27.1"
psycopg2-binary = "^2.9.9"
pytest-cov = "^4.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
httpx = "^0.27.0" # Async HTTP client for testing the API
faker = "^26.0.0"
black = "^24.4.2"
isort = "^5.13.2"
mypy = "^1.10.0"
ruff = "^0.4.9"
grpcio-tools = "^1.64.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

[tool.isort]
profile = "black"

[tool.mypy]
strict = true
ignore_missing_imports = true
# Follow imports for all code, but not for third-party libraries
follow_imports = "normal"
# Suppress errors about unsatisfied imports for libraries that don't have stubs
# Add any other libraries that don't have type hints here
disallow_untyped_defs = true